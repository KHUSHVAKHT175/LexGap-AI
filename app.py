import streamlit as st
from huggingface_hub import InferenceClient
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
hf_token = os.getenv("HF_TOKEN")

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–ª–∏–µ–Ω—Ç—É HuggingFace
client = InferenceClient(token=hf_token)
# –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—É—Ç—å –¥–ª—è –∫–æ–Ω—Ñ–∏–≥–æ–≤ Streamlit –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
os.environ["STREAMLIT_CONFIG_DIR"] = os.path.join(os.getcwd(), ".streamlit")
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Streamlit
st.set_page_config(page_title="LexGap AI", layout="wide")
st.title("LexGap AI - –ê–Ω–∞–ª–∏–∑ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞")

col1, col2 = st.columns([2, 1])

# –ú–æ–¥–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º/–∏—Å–ø–∞–Ω—Å–∫–æ–º —è–∑—ã–∫–µ (–ø–æ–¥—Ö–æ–¥–∏—Ç –∏ –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏)
model_id = "google/flan-t5-large"

with col1:
    law_text = st.text_area("–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–∫–æ–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:", height=400)

    if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
        if law_text.strip():
            st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –±—Ä–µ—à–∏:")

            # –ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
            prompt = f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –∑–∞–∫–æ–Ω–∞ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ 3 —É–ª—É—á—à–µ–Ω–∏—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏:\n\n{law_text}\n\n–§–æ—Ä–º–∞—Ç: –ë—ã–ª–∞ ‚Üí –°—Ç–∞–ª–∞"

            with st.spinner("–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã..."):
                try:
                    result = client.text_generation(
                        model=model_id,
                        prompt=prompt,
                        max_new_tokens=300,
                        temperature=0.7
                    )
                    suggestions_text = result.strip()
                except Exception as e:
                    suggestions_text = f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ HuggingFace: {e}"
        else:
            st.warning("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–∫–æ–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")

with col2:
    st.markdown("#### üîÅ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ –æ—Ç –ò–ò:")

    if 'suggestions_text' in locals():
        for line in suggestions_text.split("\n"):
            if line.strip():
                st.markdown(f"üîπ {line.strip()}")
    else:
        st.info("üí° –û–∂–∏–¥–∞–µ—Ç—Å—è —Ç–µ–∫—Å—Ç –æ—Ç –ò–ò –ø–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞.")
